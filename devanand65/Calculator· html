<!-- Simple Calculator: calculator.html
Features:
- Basic arithmetic (+ - × ÷ %)
- Keyboard support
- Clear / Backspace / Equals
- Responsive layout and pleasant styling
- Calculation history saved in localStorage

Open this file in a browser to use. -->

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Calculator</title>
  <style>
    :root{
      --bg:#0f1724;
      --panel:#0b1220;
      --accent:#60a5fa;
      --soft:#94a3b8;
      --glass: rgba(255,255,255,0.03);
      --radius:14px;
      font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    }
    *{box-sizing:border-box}
    body{background:linear-gradient(180deg,#071427 0%, #081428 100%);min-height:100vh;display:flex;align-items:center;justify-content:center;color:#e6eef8;margin:0;padding:24px}
    .calculator{width:360px;max-width:96vw;background:linear-gradient(180deg,var(--panel), rgba(255,255,255,0.02));border-radius:18px;padding:18px;box-shadow:0 8px 30px rgba(2,6,23,0.7);}
    .display{background:var(--glass);padding:12px;border-radius:12px;display:flex;flex-direction:column;gap:6px}
    .top-row{display:flex;justify-content:space-between;align-items:center}
    .title{font-size:14px;color:var(--soft)}
    .screen{min-height:56px;display:flex;flex-direction:column;justify-content:center;align-items:flex-end;font-size:28px;padding:6px 8px;color:#e6eef8}
    .screen small{color:var(--soft);font-size:12px}
    .buttons{display:grid;grid-template-columns:repeat(4,1fr);gap:10px;margin-top:14px}
    button{border:0;padding:16px;border-radius:12px;font-size:18px;cursor:pointer;outline:none;background:transparent;color:var(--soft);backdrop-filter: blur(6px);}
    button.operator{background:linear-gradient(180deg, rgba(96,165,250,0.12), rgba(96,165,250,0.06));color:var(--accent);font-weight:600}
    button.danger{background:linear-gradient(180deg, rgba(240,82,82,0.10), rgba(240,82,82,0.04));color:#ffb4b4}
    button.equal{grid-column:span 2;background:linear-gradient(90deg,var(--accent),#3b82f6);color:white;font-weight:700}
    button.wide{grid-column:span 2}
    .history{margin-top:12px;background:transparent;padding:10px;border-radius:10px;max-height:120px;overflow:auto;border:1px solid rgba(255,255,255,0.03)}
    .history h4{margin:0 0 8px 0;font-size:13px;color:var(--soft)}
    .history-item{font-size:13px;color:var(--soft);padding:6px 8px;border-radius:8px;margin-bottom:6px;background:rgba(255,255,255,0.015);display:flex;justify-content:space-between;align-items:center}
    .history-item small{color:#cbd5e1}
    .footer{margin-top:12px;font-size:12px;color:var(--soft);text-align:center}
    @media (max-width:420px){.calculator{padding:14px}}
  </style>
</head>
<body>
  <main class="calculator" role="application" aria-label="Simple calculator">
    <div class="display">
      <div class="top-row">
        <div class="title">Calculator</div>
        <div class="title">Press Esc to clear</div>
      </div>
      <div class="screen" id="screen">
        <small id="prev"></small>
        <div id="current">0</div>
      </div>
    </div>

    <div class="buttons" aria-hidden="false">
      <button class="danger" data-action="clear">C</button>
      <button data-action="back">⌫</button>
      <button data-action="percent">%</button>
      <button class="operator" data-value="/">÷</button>

      <button data-value="7">7</button>
      <button data-value="8">8</button>
      <button data-value="9">9</button>
      <button class="operator" data-value="*">×</button>

      <button data-value="4">4</button>
      <button data-value="5">5</button>
      <button data-value="6">6</button>
      <button class="operator" data-value="-">−</button>

      <button data-value="1">1</button>
      <button data-value="2">2</button>
      <button data-value="3">3</button>
      <button class="operator" data-value="+">+</button>

      <button data-value="0" class="wide">0</button>
      <button data-value=".">.</button>
      <button class="equal" data-action="equals">=</button>
    </div>

    <div class="history" id="history">
      <h4>History</h4>
      <div id="history-list"></div>
    </div>

    <div class="footer">Tip: You can also type with your keyboard (numbers, + - * /, Enter for =).</div>
  </main>

  <script>
    const prevEl = document.getElementById('prev');
    const currEl = document.getElementById('current');
    const historyList = document.getElementById('history-list');

    let current = '';
    let previous = '';
    let history = JSON.parse(localStorage.getItem('calc_history') || '[]');

    function render(){
      currEl.textContent = current || '0';
      prevEl.textContent = previous;
      renderHistory();
    }

    function addToHistory(expr, result){
      const item = {expr, result, ts: Date.now()};
      history.unshift(item);
      if(history.length>12) history.pop();
      localStorage.setItem('calc_history', JSON.stringify(history));
      renderHistory();
    }

    function renderHistory(){
      historyList.innerHTML = '';
      history.forEach(h => {
        const div = document.createElement('div');
        div.className = 'history-item';
        div.innerHTML = `<span>${h.expr}</span><small>${h.result}</small>`;
        div.addEventListener('click', ()=>{
          current = h.result.toString();
          render();
        });
        historyList.appendChild(div);
      });
    }

    function press(val){
      if('0123456789.'.includes(val)){
        // prevent multiple dots
        if(val === '.' && current.includes('.')) return;
        current += val;
      } else if('+-*/'.includes(val)){
        if(!current && previous && /[+\-*/]$/.test(previous)){
          // replace last operator
          previous = previous.slice(0,-1) + val;
        } else {
          if(!current && !previous) return;
          previous = (previous + current + val).trim();
          current = '';
        }
      }
      render();
    }

    function clearAll(){ current=''; previous=''; render(); }
    function backspace(){ current = current.slice(0,-1); render(); }

    function percent(){
      if(!current) return;
      try{
        current = (parseFloat(current)/100).toString();
      }catch(e){}
      render();
    }

    function compute(){
      let expr = (previous + current).replace(/×/g,'*').replace(/÷/g, '/');
      // sanitize: allow only digits, operators, parentheses and dot
      if(!/^[0-9+\-*/().\s%]+$/.test(expr)){
        alert('Invalid expression');
        return;
      }
      try{
        // handle percent operator if present (convert % to /100)
        expr = expr.replace(/(\d+(?:\.\d+)?)%/g, '($1/100)');
        const result = Function('return ' + expr)();
        addToHistory(previous + current, result);
        current = String(result);
        previous = '';
        render();
      }catch(e){
        alert('Error in expression');
      }
    }

    document.querySelectorAll('button').forEach(btn=>{
      btn.addEventListener('click', ()=>{
        const v = btn.getAttribute('data-value');
        const action = btn.getAttribute('data-action');
        if(action === 'clear') clearAll();
        else if(action === 'back') backspace();
        else if(action === 'percent') percent();
        else if(action === 'equals') compute();
        else if(v) press(v);
      });
    });

    // Keyboard support
    window.addEventListener('keydown', (e)=>{
      if(e.key === 'Escape') clearAll();
      else if(e.key === 'Backspace') backspace();
      else if(e.key === 'Enter' || e.key === '=') compute();
      else if(e.key === '%') percent();
      else if(/^[0-9]$/.test(e.key) || e.key === '.') press(e.key);
      else if(['+','-','*','/'].includes(e.key)) press(e.key);
    });

    // initial render
    render();
  </script>
</body>
</html>
